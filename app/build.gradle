apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion versions.compilesSdk
    defaultConfig {
        applicationId "com.example.betworks"
        minSdkVersion versions.minimumSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    applicationVariants.all {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
        it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "com.android.support") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "26.+"
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libraries.kotlin
    implementation libraries.appcompatv7
    implementation libraries.constraintLayout
    implementation libraries.dagger
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt libraries.daggerCompiler
    implementation libraries.daggerAndroid
    implementation libraries.daggerAndroidSupport
    kapt libraries.daggerAndroidProcessor
    implementation libraries.firebaseMessaging
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // use kapt for Kotlin
    implementation "android.arch.lifecycle:livedata:$room_version"
    // Check for v11.4.2 or higher
    implementation 'com.google.firebase:firebase-core:16.0.7'
    // Add dependency
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    debugImplementation 'androidx.fragment:fragment-testing:1.1.0-alpha04'
    testImplementation testlibraries.junit
    testImplementation testlibraries.robolectric
    testImplementation testlibraries.daggerMockJava
    testImplementation testlibraries.daggerMockKotlin
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.robolectric:shadows-supportv4:3.6.1'
    testImplementation "android.arch.persistence.room:testing:$room_version"
    testImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation testlibraries.runner
    androidTestImplementation testlibraries.espresso
    implementation 'com.android.support:design:28.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

task resolveProperties << {
    println "sampleOld -> ${project.hasProperty('sampleOld') ? project.property('sampleOld') : 'default value for sampleOld'}"
    println "sampleNew -> ${project.findProperty('sampleNew') ?: 'default value for sampleNew'}"
}

apply plugin: 'com.google.gms.google-services'
